import unittest
from multiprocessing import Queue
import advanced_algorithm 

class TestAdvancedAlgorithm(unittest.TestCase):
 
    #help function for filling up the queue
    def fillQueueForAnalyse(self):
        self.queueList = []
        self.q1 = Queue(maxsize=0)
        self.q2 = Queue(maxsize=0)
        self.q3 = Queue(maxsize=0)
        self.q4 = Queue(maxsize=0)
        
        for x in range(7):
            self.q1.put(0.600)
            self.q2.put(0.700)
            self.q3.put(0.650)
            self.q4.put(0.750)
            self.q1.put(0.700)
            self.q2.put(0.800)
            self.q3.put(0.700)
            self.q4.put(0.650)
        
        self.queueList = [self.q1, self.q2, self.q3, self.q4]

    def test_Analyse(self):
        self.fillQueueForAnalyse()
        advanced_algorithm.AdvancedAlgorithm.Analyse(self.queueList)
        self.assertEqual(advanced_algorithm.eMGList, (0.600, 0.700, 0.650, 0.750, 0.700, 0.800, 0.700, 0.650, 0.600, 0.700, 0.650, 0.750, 0.700, 0.800, 0.700, 0.650, 0.600, 0.700, 0.650, 0.750, 0.700, 0.800, 0.700, 0.650, 0.600, 0.700, 0.650, 0.750, 0.700, 0.800, 0.700, 0.650))


if __name__ == '__main__':
    unittest.main()